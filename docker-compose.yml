services:
  postgres:
    image: 'postgres:15.5'
    env_file: .env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 60
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  alembic_migrate:
    build: .
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    command: python3 -m alembic upgrade head
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  bot:
    image: "bot"
    stop_signal: SIGINT
    build: .
    working_dir: "/usr/src/app/bot"
    volumes:
      - .:/usr/src/app/bot
    ports:
      - "80:80"
    command: poetry run python -m app
    restart: always
    env_file: .env
    depends_on:
      alembic_migrate:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
  # crypto_pay_webhook:
  #   image: "crypto_pay_webhook"
  #   stop_signal: SIGINT
  #   build:
  #     context: .
  #     dockerfile: src/crypto_webhook/Dockerfile
  #   working_dir: "/usr/src/app/api"
  #   volumes:
  #     - .:/user/src/app/api
  #   command: ["python3", "-m", "src.crypto_webhook.app"]
  #   restart: always
